version: 2.1

orbs:
  ipsec: danackerson/ipsec@0.2.4

jobs:
  build:
    docker:
      - image: golang:alpine
    working_directory: /go/src/github.com/danackerson/ackerson.de-go
    steps:
      - checkout
      - run:
          name: "Fetch dependencies, build and test"
          command: |
            apk add -U curl build-base git

            go get -u github.com/gobuffalo/packr/v2/packr2
            go get -u github.com/jstemmer/go-junit-report
            mkdir -p /tmp/test-results

            go get -t -d -v ./...
            go test -v ./... | go-junit-report > /tmp/test-results/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
      - setup_remote_docker
      - run:
          name: "Install Docker CE"
          command: |
            curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-$CTX_DOCKER_ENGINE_VERSION.tgz && tar --strip-components=1 -xvzf docker-$CTX_DOCKER_ENGINE_VERSION.tgz -C /usr/local/bin
            rm docker-$CTX_DOCKER_ENGINE_VERSION.tgz && rm -f /var/cache/apk/*
      - run:
          name: "Build & push docker image"
          command: |
            packr2
            env GOOS=linux GOARCH=arm GOARM=7 go build -o homepage

            docker build --compress -t danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM .
            docker login -u $CTX_DOCKER_USER -p $CTX_DOCKER_PASS
            docker tag danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM danackerson/ackerson.de:latest
            docker push danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM
            docker push danackerson/ackerson.de:latest
      - run:
          name: "Prepare K8S YAML config"
          command: |
            export CIRCLE_BUILD_NUM_B64=`echo -n $CIRCLE_BUILD_NUM | base64`
            sed -i -e "s@{{CIRCLE_BUILD_NUM_B64}}@$CIRCLE_BUILD_NUM_B64@" homepage.yml

            echo -n "$ackSecret" | base64 | tr -d \\n > .base64_enc
            export ACK_SECRET_B64=`cat .base64_enc`
            sed -i -e "s@{{ACK_SECRET_B64}}@$ACK_SECRET_B64@" homepage.yml

            echo -n "$ackWunder" | base64 | tr -d \\n > .base64_enc
            export ACK_WUNDER_B64=`cat .base64_enc`
            sed -i -e "s@{{ACK_WUNDER_B64}}@$ACK_WUNDER_B64@" homepage.yml

            echo -n "$CTX_JOIN_API_KEY" | base64 | tr -d \\n > .base64_enc
            export CTX_JOIN_API_KEY_B64=`cat .base64_enc`
            sed -i -e "s@{{CTX_JOIN_API_KEY_B64}}@$CTX_JOIN_API_KEY_B64@" homepage.yml

            sed -i -e "s@{{HOMEPAGE_HOSTNAME}}@$HOMEPAGE_HOSTNAME@" homepage.yml
            rm .base64_enc
      - persist_to_workspace:
          root: /go/src/github.com/danackerson/ackerson.de-go
          paths:
            - homepage.yml

commands:
  prepare_deploy_script:
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: "Prepare deploy script"
          command: |
            cat \<<EOF >deploy_script.sh
            scp -o StrictHostKeyChecking=no /tmp/homepage.yml $SSH_USER@$SSH_HOST:~/k3s/
            ssh $SSH_USER@$SSH_HOST -- "sudo kubectl apply -f k3s/homepage.yml"
            EOF

            chmod u+x deploy_script.sh

workflows:
  build-deploy:
    jobs:
        - build:
            context: org-global
        - ipsec/remote-deploy:
            context: org-global
            requires:
              - build
            pre-steps:
              - prepare_deploy_script
