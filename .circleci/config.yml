version: 2.1

orbs:
  ipsec: danackerson/ipsec@0.2.4

jobs:
  build:
    docker:
      - image: golang:alpine
    working_directory: /go/src/github.com/danackerson/ackerson.de-go
    steps:
      - checkout
      - run:
          name: "Fetch dependencies, build and test"
          command: |
            apk add -U curl build-base git

            go get github.com/gobuffalo/packr/v2/packr2
            go get github.com/jstemmer/go-junit-report
            mkdir -p /tmp/test-results

            go get -t -d -v ./...
            go test -v ./... | go-junit-report > /tmp/test-results/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
      - run:
          name: "Build & push docker image"
          command: |
            packr2
            env GOOS=linux GOARCH=arm GOARM=7 go build -o homepage
      - persist_to_workspace:
          root: /go/src/github.com/danackerson/ackerson.de-go
          paths:
            - homepage
            - run_homepage.sh

commands:
  prepare_deploy_script:
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: "Prepare deploy script"
          command: |
            cat \<<EOF >deploy_script.sh
            # Prepare docker env
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
              mkdir homepage_app || true"
            ssh $SSH_USER@$SSH_HOST "docker rm -f homepage || true"
            scp /tmp/homepage /tmp/run_homepage.sh \
              $SSH_USER@$SSH_HOST:~/homepage_app/

            # Run homepage
            ssh $SSH_USER@$SSH_HOST "chmod u+x ~/homepage_app/run_homepage.sh && \
            docker pull arm32v7/alpine && \
            docker run -d --restart=always --network='web' \
              -v ~/homepage_app:/tmp/ \
              -e CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM \
              -e CTX_JOIN_API_KEY=$CTX_JOIN_API_KEY \
              -e ackSecret=$ackSecret -e ackWunder=$ackWunder \
              -e CTX_DIGITALOCEAN_SPACES_KEY=$CTX_DIGITALOCEAN_SPACES_KEY \
              -e CTX_DIGITALOCEAN_SPACES_SECRET=$CTX_DIGITALOCEAN_SPACES_SECRET \
              -e CTX_DIGITALOCEAN_SPACES_NAME_PUBLIC=$CTX_DIGITALOCEAN_SPACES_NAME_PUBLIC \
              --label='traefik.enable=true' \
              --label='traefik.http.routers.homepage.entrypoints=http,httpsecure' \
              --label='traefik.http.routers.homepage.rule=Host(\`$HOMEPAGE_HOSTNAME\`)' \
              --label='traefik.http.routers.homepage.tls.certResolver=traefikdash' \
              --label='traefik.http.routers.homepage.tls.domains=$HOMEPAGE_HOSTNAME' \
              -p8080 --name homepage arm32v7/alpine /tmp/run_homepage.sh"

            EOF

            chmod u+x deploy_script.sh

workflows:
  build-deploy:
    jobs:
        - build:
            context: org-global
        - ipsec/remote-deploy:
            context: org-global
            requires:
              - build
            pre-steps:
              - prepare_deploy_script
