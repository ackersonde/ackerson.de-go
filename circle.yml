version: 2
executorType: docker
containerInfo:
  - image: golang:1.8
stages:
  build:
    workDir: /go/src/github.com/danackerson/ackerson.de-go
    steps:
      - type: checkout
      # Build & Test: https://discuss.circleci.com/t/sample-rails-app-running-docker-in-a-container/9066
      - type: shell
        name: "Install Docker Engine, JUnit, Setup Test Path"
        command: |
          curl -L -o /tmp/docker.tgz https://get.docker.com/builds/Linux/x86_64/docker-1.13.1.tgz
          tar -xz -C /tmp -f /tmp/docker.tgz
          mv /tmp/docker/docker* /usr/bin/

          curl -L "https://github.com/docker/compose/releases/download/1.11.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
          chmod +x /usr/bin/docker-compose

          go get github.com/jstemmer/go-junit-report
          mkdir -p /tmp/test-results

      - type: shell
        name: "Fetch dependencies and test"
        command: |
          set -eu
          go get -t -d -v ./...
          go test -v -race ./... | go-junit-report > /tmp/test-results/unit-tests.xml
      - type: test-results-store
        path: /tmp/test-results

      - type: setup-docker-engine
      - type: shell
        name: "Build, run and test docker image"
        command: |
          env GOOS=linux GOARCH=386 go build server.go
          docker build -t danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM .
          docker run -d -p 443:8443 -p 80:8080 -e prodSession=true --name ackerson.de danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM
          docker exec ackerson.de curl -k --retry 10 --retry-delay 5 -v https://localhost:8443/ | grep Ackerson
          docker ps -a

      - type: add-ssh-keys
        name: "Load key"
        fingerprints:
          - "93:c4:61:21:a6:82:d8:6d:4f:73:11:79:37:23:83:07"
      - type: shell
        name: Start ssh-agent
        command: |
          ssh-agent -s > ~/.ssh_agent_conf
          source ~/.ssh_agent_conf
          for _k in $(ls ${HOME}/.ssh/id_*); do
            ssh-add ${_k} || true
          done

      - type: deploy
        name: "Upload to DockerHub, deploy container to Digital Ocean Droplet & launch"
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM
          source ~/.ssh_agent_conf

          export DEPLOY_SERVER=deploy.ackerson.de
          if [ $DEPLOY_SERVER_IP ]; then
            export DEPLOY_SERVER=$DEPLOY_SERVER_IP
          fi
          echo "Deploy to $DEPLOY_SERVER"
          ssh-add -l
          ssh -o "StrictHostKeyChecking no" ackersond@$DEPLOY_SERVER mkdir -p /home/ackersond/bb_games/
          ssh -o "StrictHostKeyChecking no" ackersond@$DEPLOY_SERVER docker pull danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM
          ssh -o "StrictHostKeyChecking no" ackersond@$DEPLOY_SERVER docker rm -f ackerson.de; true
          ssh -o "StrictHostKeyChecking no" ackersond@$DEPLOY_SERVER docker run -d --restart=always -p 443:8443 -p 80:8080 -e CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM -e prodSession=true -e joinAPIKey=$joinAPIKey -e ackSecret=$ackSecret -e ackWunder=$ackWunder -v /home/ackersond/certs:/root/certs:ro -v /home/ackersond/bb_games:/app/public/bb_games:rw --name ackerson.de danackerson/ackerson.de:vc$CIRCLE_BUILD_NUM
